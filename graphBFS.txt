import java.util.LinkedList;
import java.util.Queue;



public class Graph{
    
    int V;
    LinkedList<Integer> l[];
    Queue<Integer> q;
    int[] boolArr;
    
    Graph(int V){
        
        this.V = V;
        l = new LinkedList[V];
        q = new LinkedList();
        boolArr = new int[V];
        
        for(int i = 0; i < V; i++){
            l[i] = new LinkedList<>();
        }
    }
    void addEdge(int src, int des){
        
        l[src].add(des);
     
    }
    
    void printBFS(int start){
        int var = 0;
        q.add(start);
        boolArr[start] = 1;
        while (var < V){
           
          int x = q.remove();
          System.out.println(x);
          for (Integer t : l[x]){
              
              if(boolArr[t]==0){
                  
                    q.add(t);
                    boolArr[t]=1;
              }
              
          }
           var++; 
        }
        
        
        
    }
   

    public static void main(String []args){
        
        Graph g = new Graph(4);
        g.addEdge(0, 1);
        g.addEdge(0, 2);
        g.addEdge(1, 2);
        g.addEdge(2, 0);
        g.addEdge(2, 3);
        g.addEdge(3, 3);
        g.printBFS(2);
    }
}