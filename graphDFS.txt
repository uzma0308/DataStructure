import java.util.LinkedList;
import java.util.Stack;



public class Graph{
    
    int V;
    LinkedList<Integer> l[];
    Stack<Integer> s;
    int[] boolArr;
    
    Graph(int V){
        
        this.V = V;
        l = new LinkedList[V];
        s = new Stack();
        boolArr = new int[V];
        
        for(int i = 0; i < V; i++){
            l[i] = new LinkedList<>();
        }
    }
    void addEdge(int src, int des){
        
        l[src].add(des);
        l[des].add(src);
  }
  
  void print()
  {
      for (int i = 0;i<V;i++)
      {
         System.out.println("For node "+i+" :\n "
         + l[i]+"\n");
      }
  }
    
    void printDFS(int start){
        int t;
		boolean boolCheck;
        s.push(start);
        boolArr[start] = 1;
        System.out.println(start);
        while(!s.empty()){
            
            t = s.peek();
            boolCheck = false;
            for ( Integer x : l[t]){
                
                   if(boolArr[x]==0){
                        s.push(x);
                        boolArr[x] = 1;
                        boolCheck = true;
                        System.out.println(x);
                        break;
                   }
           }
           if(!boolCheck)
           {
               s.pop();
           }
        
        }
        
        
    }
   

    public static void main(String []args){
        
        Graph g = new Graph(5);
        g.addEdge(0,1);
		g.addEdge(0,2);
		g.addEdge(1,3);
		g.addEdge(1,4);
	    g.print();
        g.printDFS(0);
    }
}